#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞
"""

import os
import asyncio
import aiofiles
from datetime import datetime

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TELEGRAM_BOT_TOKEN'] = 'test_token'
os.environ['OPENAI_API_KEY'] = 'test_key'

async def test_prompt_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–º—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º—Ç–∞...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º—Ç –Ω–∞–ø—Ä—è–º—É—é
        async with aiofiles.open("prompt.txt", 'r', encoding='utf-8') as file:
            prompt = await file.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–º—Ç –∑–∞–≥—Ä—É–∂–µ–Ω
        if prompt and len(prompt) > 100:
            print("‚úÖ –ü—Ä–æ–º—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
            print(f"üìè –†–∞–∑–º–µ—Ä –ø—Ä–æ–º—Ç–∞: {len(prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–º—Ç–∞
            if "–ü—Ä–æ–º—Ç –Ω–µ–π—Ä–æ-—Ä–µ–∫—Ä—É—Ç–µ—Ä–∞ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π" in prompt:
                print("‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–º—Ç–∞")
            if "–í–µ—Ç–∫–∞ –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ" in prompt:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ç–∫–∞—Ö")
            if "–ë–ª–æ–∫ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ" in prompt:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–∞—Ö")
            if "–ê–≥–µ–Ω—Ç-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤" in prompt:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≥–µ–Ω—Ç–∞—Ö")
            if "–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã" in prompt:
                print("‚úÖ –ù–∞–π–¥–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—á–∞–ª—É —Ä–∞–±–æ—Ç—ã")
            
            return True
        else:
            print("‚ùå –ü—Ä–æ–º—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–º—Ç–∞: {e}")
        return False

async def test_bot_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –±–æ—Ç–∞"""
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞...")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –≤ bot.py
        class MockUserState:
            def __init__(self, user_id):
                self.user_id = user_id
                self.conversation_history = []
                self.is_interview_active = False
                self.prompt = None
            
            def add_message(self, text, is_bot=False):
                self.conversation_history.append({
                    "text": text,
                    "is_bot": is_bot,
                    "timestamp": datetime.now()
                })
            
            def get_conversation_history(self):
                return self.conversation_history
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        user_state = MockUserState(12345)
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–º—Ç–∞ (–∫–∞–∫ –≤ bot.py —Å—Ç—Ä–æ–∫–∞ 68)
        try:
            async with aiofiles.open("prompt.txt", 'r', encoding='utf-8') as file:
                user_state.prompt = await file.read()
            print("‚úÖ –ü—Ä–æ–º—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º—Ç–∞: {e}")
            return False
        
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ (–∫–∞–∫ –≤ bot.py —Å—Ç—Ä–æ–∫–∞ 72)
        user_state.is_interview_active = True
        print("‚úÖ –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–∞–∫ –≤ bot.py —Å—Ç—Ä–æ–∫–∏ 75-80)
        welcome_message = """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø AI-—Ä–µ–∫—Ä—É—Ç–µ—Ä, –∏ —è —Ö–æ—á—É –∑–∞–¥–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –∫–ª—é—á–µ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é.

–ï—Å–ª–∏ –≤–∞–º –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫–æ–µ-–Ω–∏–±—É–¥—å —Å–ª–æ–≤–æ –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –≤—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª—é–±–æ–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ?"""
        
        user_state.add_message(welcome_message, is_bot=True)
        print("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏—Å—Ç–æ—Ä–∏—é")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_response = "–î–∞, –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ"
        user_state.add_message(user_response, is_bot=False)
        print("‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
        history = user_state.get_conversation_history()
        if len(history) == 2:
            print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è")
            print(f"üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(history)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π
            for i, msg in enumerate(history):
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ {i+1}: {'–ë–æ—Ç' if msg['is_bot'] else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} - {msg['text'][:50]}...")
            
            return True
        else:
            print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞: {e}")
        return False

async def test_document_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
        
        from document_generator import DocumentGenerator
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        user_id = 12345
        conversation_history = [
            {
                "text": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø AI-—Ä–µ–∫—Ä—É—Ç–µ—Ä...",
                "is_bot": True,
                "timestamp": datetime.now()
            },
            {
                "text": "–î–∞, –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ",
                "is_bot": False,
                "timestamp": datetime.now()
            }
        ]
        analytics_report = """1. –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ö–ê–ù–î–ò–î–ê–¢–ê
–ö–∞–Ω–¥–∏–¥–∞—Ç –ø—Ä–æ—è–≤–∏–ª –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏.

2. –ê–ù–ê–õ–ò–ó –û–ë–†–ê–ó–û–í–ê–ù–ò–Ø
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞.

3. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ."""
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        doc_generator = DocumentGenerator()
        doc_generator.generate_report(user_id, conversation_history, analytics_report)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        doc_path = doc_generator.save_document(user_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
        if os.path.exists(doc_path):
            print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
            print(f"üìÑ –ü—É—Ç—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É: {doc_path}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            os.remove(doc_path)
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω")
            
            return True
        else:
            print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞...\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–º—Ç–∞
    prompt_ok = await test_prompt_loading()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
    bot_logic_ok = await test_bot_logic()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    document_ok = await test_document_generation()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º—Ç–∞: {'‚úÖ' if prompt_ok else '‚ùå'}")
    print(f"–õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞: {'‚úÖ' if bot_logic_ok else '‚ùå'}")
    print(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {'‚úÖ' if document_ok else '‚ùå'}")
    
    if prompt_ok and bot_logic_ok and document_ok:
        print("\nüéØ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("\nüìã –í–ê–ñ–ù–´–ï –í–´–í–û–î–´:")
        print("‚úÖ –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¢–û–õ–¨–ö–û –ø—Ä–æ–º—Ç –∏–∑ prompt.txt –¥–ª—è –¥–∏–∞–ª–æ–≥–∞")
        print("‚úÖ –ü—Ä–æ–º—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è")
        print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ–º—Ç–æ–º (analytics_prompt.txt)")
        print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è")
        print("‚úÖ DOCX –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ '–ó–∞–∫–æ–Ω—á–∏—Ç—å –±–µ—Å–µ–¥—É' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥.")

if __name__ == "__main__":
    asyncio.run(main())

